apiVersion: perses.dev/v1alpha1
kind: PersesDashboard
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: acm-cluster-rsrc-use
    app.kubernetes.io/name: perses-dashboard
    app.kubernetes.io/part-of: perses-operator
  name: acm-cluster-rsrc-use
  namespace: open-cluster-management-observability
spec:
  display:
    description: http://www.brendangregg.com/USEmethod/use-linux.html
    name: USE Method / Cluster
  duration: 3h
  layouts:
  - kind: Grid
    spec:
      display:
        title: CPU
      items:
      - content:
          $ref: '#/spec/panels/0_0'
        height: 8
        width: 12
        x: 0
        "y": 0
      - content:
          $ref: '#/spec/panels/0_1'
        height: 8
        width: 12
        x: 12
        "y": 0
  - kind: Grid
    spec:
      display:
        title: Memory
      items:
      - content:
          $ref: '#/spec/panels/1_0'
        height: 8
        width: 12
        x: 0
        "y": 0
      - content:
          $ref: '#/spec/panels/1_1'
        height: 8
        width: 12
        x: 12
        "y": 0
  - kind: Grid
    spec:
      display:
        title: Network
      items:
      - content:
          $ref: '#/spec/panels/2_0'
        height: 8
        width: 12
        x: 0
        "y": 0
      - content:
          $ref: '#/spec/panels/2_1'
        height: 8
        width: 12
        x: 12
        "y": 0
  - kind: Grid
    spec:
      display:
        title: Disk IO
      items:
      - content:
          $ref: '#/spec/panels/3_0'
        height: 8
        width: 12
        x: 0
        "y": 0
      - content:
          $ref: '#/spec/panels/3_1'
        height: 8
        width: 12
        x: 12
        "y": 0
  - kind: Grid
    spec:
      display:
        title: Disk Space
      items:
      - content:
          $ref: '#/spec/panels/4_0'
        height: 8
        width: 24
        x: 0
        "y": 0
  panels:
    "0_0":
      kind: Panel
      spec:
        display:
          description: Shows CPU utilization across all nodes in the cluster
          name: CPU Utilisation
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: percent
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: |2-
                    (
                        instance:node_cpu_utilisation:rate1m{cluster="$cluster",job="node-exporter"}
                      *
                        instance:node_num_cpu:sum{cluster="$cluster",job="node-exporter"}
                    )
                  /
                    scalar(sum(instance:node_num_cpu:sum{cluster="$cluster",job="node-exporter"}))
    "0_1":
      kind: Panel
      spec:
        display:
          description: Shows CPU saturation using load1 per CPU metric
          name: CPU Saturation (load1 per CPU)
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: percent
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: |2-
                    instance:node_load1_per_cpu:ratio{cluster="$cluster",job="node-exporter"}
                  /
                    scalar(count(instance:node_load1_per_cpu:ratio{cluster="$cluster",job="node-exporter"}))
    "1_0":
      kind: Panel
      spec:
        display:
          description: Shows memory utilization across all nodes in the cluster
          name: Memory Utilisation
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: percent
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: |2-
                    instance:node_memory_utilisation:ratio{cluster="$cluster",job="node-exporter"}
                  /
                    scalar(count(instance:node_memory_utilisation:ratio{cluster="$cluster",job="node-exporter"}))
    "1_1":
      kind: Panel
      spec:
        display:
          description: Shows memory saturation using major page faults
          name: Memory Saturation (Major Page Faults)
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: decimal
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: instance:node_vmstat_pgmajfault:rate1m{cluster="$cluster",job="node-exporter"}
    "2_0":
      kind: Panel
      spec:
        display:
          description: Shows network utilization for received and transmitted bytes
          name: Net Utilisation (Bytes Receive/Transmit)
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: bytes/sec
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: instance:node_network_receive_bytes_excluding_lo:rate1m{cluster="$cluster",job="node-exporter"}
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: instance:node_network_transmit_bytes_excluding_lo:rate1m{cluster="$cluster",job="node-exporter"}
    "2_1":
      kind: Panel
      spec:
        display:
          description: Shows network saturation using packet drops
          name: Net Saturation (Drops Receive/Transmit)
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: bytes/sec
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: instance:node_network_receive_drop_excluding_lo:rate1m{cluster="$cluster",job="node-exporter"}
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: instance:node_network_transmit_drop_excluding_lo:rate1m{cluster="$cluster",job="node-exporter"}
    "3_0":
      kind: Panel
      spec:
        display:
          description: Shows disk IO utilization across all devices
          name: Disk IO Utilisation
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: percent
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: |2-
                    instance_device:node_disk_io_time_seconds:rate1m{cluster="$cluster",job="node-exporter"}
                  /
                    scalar(
                      count(instance_device:node_disk_io_time_seconds:rate1m{cluster="$cluster",job="node-exporter"})
                    )
    "3_1":
      kind: Panel
      spec:
        display:
          description: Shows disk IO saturation using weighted IO time
          name: Disk IO Saturation
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: percent
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: |2-
                    instance_device:node_disk_io_time_weighted_seconds:rate1m{cluster="$cluster",job="node-exporter"}
                  /
                    scalar(
                      count(
                        instance_device:node_disk_io_time_weighted_seconds:rate1m{cluster="$cluster",job="node-exporter"}
                      )
                    )
    "4_0":
      kind: Panel
      spec:
        display:
          description: Shows disk space utilization across all filesystems
          name: Disk Space Utilisation
        plugin:
          kind: TimeSeriesChart
          spec:
            legend:
              mode: list
              position: bottom
              size: small
            visual:
              areaOpacity: 1
              display: line
              lineWidth: 0.25
              palette:
                mode: auto
              stack: all
            yAxis:
              format:
                unit: percent
        queries:
        - kind: TimeSeriesQuery
          spec:
            plugin:
              kind: PrometheusTimeSeriesQuery
              spec:
                datasource:
                  kind: PrometheusDatasource
                  name: thanos-query-frontend
                query: |2-
                    sum without (device) (
                      max without (fstype, mountpoint) (
                          node_filesystem_size_bytes{cluster="$cluster",fstype!="",job="node-exporter"}
                        -
                          node_filesystem_avail_bytes{cluster="$cluster",fstype!="",job="node-exporter"}
                      )
                    )
                  /
                    scalar(
                      sum(
                        max without (fstype, mountpoint) (
                          node_filesystem_size_bytes{cluster="$cluster",fstype!="",job="node-exporter"}
                        )
                      )
                    )
  refreshInterval: 5m
  variables:
  - kind: ListVariable
    spec:
      allowAllValue: true
      allowMultiple: true
      display:
        hidden: false
        name: cluster
      name: cluster
      plugin:
        kind: PrometheusLabelValuesVariable
        spec:
          datasource:
            kind: PrometheusDatasource
            name: thanos-query-frontend
          labelName: name
          matchers:
          - acm_managed_cluster_labels{openshiftVersion_major!="3"}
status: {}
